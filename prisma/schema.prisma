generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Expense {
  id          String          @id @default(cuid())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  amount      Int
  user_id     String
  user        User            @relation(fields: [user_id], references: [id], onDelete: Cascade)
  category_id String
  category    ExpenseCategory @relation(fields: [category_id], references: [id], onDelete: Cascade)
  day_id      String
  day         Day             @relation(fields: [day_id], references: [id], onDelete: Cascade)
}

model ExpenseCategory {
  id        String    @id @default(cuid())
  user_id   String
  user      User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expenses  Expense[]
  color     String
  name      String

  @@unique([user_id, name])
}

model Day {
  id        String    @id @default(cuid())
  user_id   String
  user      User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  month     Int //This is a month index!! So it goes from 0 - 11
  day       Int
  year      Int
  expenses  Expense[]

  @@unique([user_id, month, day, year])
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String            @id @default(cuid())
  name               String?
  email              String?           @unique
  emailVerified      DateTime?
  image              String?
  accounts           Account[]
  sessions           Session[]
  //Stuff I added
  expense_categories ExpenseCategory[]
  expenses           Expense[]
  days               Day[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
